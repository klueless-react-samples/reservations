{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidcruwys/dev/csharp/Reservations/reservation-react-native/App.tsx\";\nvar images = [];\n\nfor (var i = 0; i < 16; i++) {\n  images.push(require(\"./assets/avatars/\" + i + \".svg\"));\n}\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SearchInput, Button } from \"./components\";\nimport { search } from \"./services\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reservations = _useState4[0],\n      setReservations = _useState4[1];\n\n  function handleGoPress() {\n    search(input).then(function (data) {\n      return setReservations(data);\n    });\n  }\n\n  function cell(value) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignSelf: 'stretch'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 55\n      }\n    }, value));\n  }\n\n  function img(image) {\n    return React.createElement(View, {\n      style: {\n        flex: .2,\n        alignSelf: 'stretch'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, React.createElement(\"img\", {\n      src: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 56\n      }\n    }));\n  }\n\n  function renderReservations() {\n    var _this = this;\n\n    return reservations.map(function (m, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          flex: 1,\n          alignSelf: 'stretch',\n          flexDirection: 'row',\n          backgroundColor: index % 2 ? '#F7F6E7' : '#F1F1E1'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, img(images[0]), cell(m.name), cell(m.date), cell(m.time), cell(m.noOfPeople), cell(m.phoneNumber));\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchInput, {\n    placeholder: \"Search reservations by name or phone...\",\n    value: input,\n    onChange: setInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"GO\",\n    variant: \"error\",\n    onPress: function onPress() {\n      return handleGoPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.h1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Reservations will go here\"), renderReservations()));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  header: {\n    backgroundColor: 'lightseagreen',\n    flexDirection: \"row\",\n    padding: 15,\n    gap: 15\n  },\n  body: {\n    backgroundColor: 'ivory',\n    flex: 9\n  },\n  h1: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold',\n    fontFamily: 'serif'\n  }\n});","map":{"version":3,"sources":["/Users/davidcruwys/dev/csharp/Reservations/reservation-react-native/App.tsx"],"names":["images","i","push","require","React","useState","SearchInput","Button","search","App","input","setInput","reservations","setReservations","handleGoPress","then","data","cell","value","flex","alignSelf","img","image","renderReservations","map","m","index","flexDirection","backgroundColor","name","date","time","noOfPeople","phoneNumber","styles","container","header","body","h1","StyleSheet","create","padding","gap","fontSize","color","fontWeight","fontFamily"],"mappings":"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","sourcesContent":["var images: any[] = [];\n\nfor (let i = 0; i < 16; i++) {\n  images.push(require(`./assets/avatars/${i}.svg`));\n}\n\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { SearchInput, Button  } from './components';\nimport { search  } from './services';\n\nexport default function App() {\n  const [input, setInput] = useState<string>('');\n  const [reservations, setReservations] = useState([]);\n\n  function handleGoPress() {\n    search(input)\n      .then((data: any) => setReservations(data));\n  }\n\n  function cell(value: any) {\n    return (\n      <View style={{ flex: 1, alignSelf: 'stretch' }}><Text>{value}</Text></View>\n    );\n  }\n\n  function img(image: any) {\n    return (\n      <View style={{ flex: .2, alignSelf: 'stretch' }}><img src={image} /></View>\n    );\n  }\n\n  // <Text style={{alignSelf: \"flex-start\"}}>{value}</Text>\n  \n\n  function renderReservations() {\n    return reservations.map((m: any, index: number)=> (\n      <View  key={index} style={{ flex: 1, alignSelf: 'stretch', flexDirection: 'row', backgroundColor: (index % 2 ? '#F7F6E7' : '#F1F1E1' ) }}>\n                {img(images[0])}\n                {cell(m.name)}\n                {cell(m.date)}\n                {cell(m.time)}\n                {cell(m.noOfPeople)}\n                {cell(m.phoneNumber)}\n      </View>\n      // <View key={index}>\n      //   <Text>{m.name}</Text>\n      //   <Text>{m.date}</Text>\n      //   <Text>{m.time}</Text>\n      //   <Text>{m.noOfPeople}</Text>\n      //   <Text>{m.phoneNumber}</Text>\n      // </View>\n    ))\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <SearchInput placeholder=\"Search reservations by name or phone...\" value={input} onChange={setInput} />\n        <Button title=\"GO\" variant='error' onPress={()=> handleGoPress() }></Button>\n      </View>\n      <View style={styles.body}>\n        <Text style={ styles.h1 }>Reservations will go here</Text>\n        {renderReservations()}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  header: {\n    backgroundColor: 'lightseagreen',\n    flexDirection: \"row\",\n    padding: 15,\n    gap: 15,\n\n  },\n  body: {\n    backgroundColor: 'ivory',\n    flex: 9,\n  },\n  h1: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold',\n    fontFamily: 'serif'\n  },\n});\n"]},"metadata":{},"sourceType":"module"}